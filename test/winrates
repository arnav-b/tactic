#!/usr/bin/env Rscript
library(tidyverse)
library(lubridate)

# Win rate vs random over time
alphabeta <- read_csv("./test/data/alphaBetaSearch.csv")
alphabeta$Time <- ymd_hms(alphabeta$Time)

png(file = "./test/plots/minimax_vs_random.png")
ggplot(data = alphabeta, mapping = aes(x = Time, y = Win)) + 
    ggtitle("TACTIC Win Rate vs Random") +
    xlab("Time") + 
    ylab("Games Won Out of 100") +
    geom_point() +
    geom_smooth(se = FALSE)
dev.off()

# Win rate vs humans
vshumans <- read_csv("./test/data/vshumans.csv")

# Get results in terms of players
get_stats <- function(df, player) {
    df_X <- filter(df, X == player) 
    df_O <- filter(df, O == player)

    wins <- sum(df_X$Winner == "X") + sum(df_O$Winner == "O")
    losses <- sum(df_X$Winner == "O") + sum(df_O$Winner == "X")
    ties <- sum(df_X$Winner == "Tie") + sum(df_O$Winner == "Tie")
    total_games <- nrow(df_X) + nrow(df_O)

    return(c(wins, losses, ties, total_games))
}

players <- c("Computer - Easy", "Computer - Medium", "Computer - Hard")
wins <- vector("double", 3)
losses <- vector("double", 3)
ties <- vector("double", 3)
games_played <- vector("integer", 3)

for (i in seq_along(players)) {
    stats <- get_stats(vshumans, players[[i]])
    wins[[i]] = stats[[1]]
    losses[[i]] = stats[[2]]
    ties[[i]] = stats[[3]]
    games_played[[i]] = stats[[4]]
}

averages <- (wins) / games_played
print(averages)
summary <- rbind(
                data.frame("Difficulty" = players, "games" = ties, "type" = "ties"),
                data.frame("Difficulty" = players, "games" = losses, "type" = "losses"),
                data.frame("Difficulty" = players, "games" = wins, "type" = "wins")
                ) 
summary$Difficulty <- factor(summary$Difficulty, levels = c("Computer - Easy", 
                                                            "Computer - Medium",
                                                            "Computer - Hard"))
color <- c("#FFBF00", "#D2222D", "#238823")

png(file = "./test/plots/minimax_vs_humans.png")
ggplot(data = summary, mapping = aes(x = Difficulty, y = games, fill = type)) +
    ggtitle("TACTIC Performance vs Humans") + 
    ylab("Games Played") + 
    geom_col() +
    scale_fill_manual(values = color) +
    theme(legend.title = element_blank())
dev.off()
